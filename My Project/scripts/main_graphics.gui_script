local soundOnAnim = hash("sound")
local soundOffAnim = hash("soundOff")
local bulbAnim = hash("bulb")
local adVideoAnim = hash("adView")
local input_leftClick = hash("touch")
local levelOver = hash("levelOver")
local writeLevel = hash("writeLevel")
local handOff = hash("handOff")
local noConnection = hash("noConnection")
local yesConnection = hash("yesConnection")
local noLevel = hash("noLevel")
local clues = 1


local function nodeFade(node)
	local from_color = gui.get_color(node)
	local to_color = gui.get_color(node)
	from_color.w = 0
	gui.set_color(node, from_color)
	gui.animate(node, gui.PROP_COLOR, to_color, gui.EASING_IN,3, 0.5)

end
local function introAnim()
	local x1 = 270
	local x2 = 435
	local x3 = 690
	local y = 1820
	msg.post("controller#controllerScript","startSound") 
	gui.set_position(gui.get_node("titleA"), vmath.vector3(x1,y,0))
	gui.set_position(gui.get_node("ord"), vmath.vector3(x2,y,0))
	gui.set_position(gui.get_node("titleB"), vmath.vector3(x3,y,0))
	gui.set_text(gui.get_node("titleA"), "W")
	gui.set_text(gui.get_node("titleB"), "F")	
end

function init(self)
	local a = gui.get_node("titleA")
	local b = gui.get_node("titleB")
	local c = gui.get_node("ord")
	local d = gui.get_node("lip")
	local hand = gui.get_node("hand")
	local upToDate = gui.get_node("upToDate")
	local tomorrow = gui.get_node("tomorrow")
	local chapter = gui.get_node("chapter")
	local next = gui.get_node("next")
	local share = gui.get_node("share")
	local noNet = gui.get_node("noNet")
	local netRetry = gui.get_node("netRetry")
	local instructions = gui.get_node("instructions")
	gui.set_enabled(upToDate, false)
	gui.set_enabled(tomorrow, false)
	gui.set_enabled(chapter, false)
	gui.set_enabled(next, false)
	gui.set_enabled(share, false)
	gui.set_enabled(hand, false)
	gui.set_enabled(noNet, false)
	gui.set_enabled(netRetry, false)
	gui.set_enabled(instructions, false)
	nodeFade(a)
	nodeFade(b)
	nodeFade(c)
	nodeFade(d)
	gui.animate(a, "rotation.y", 360, gui.EASING_LINEAR, 0.5, 4, nil, gui.PLAYBACK_ONCE_FORWARD)
	gui.animate(b, "rotation.y", 360, gui.EASING_LINEAR, 0.5, 4, introAnim, gui.PLAYBACK_ONCE_FORWARD)
	msg.post(".", "acquire_input_focus")
end

function final(self)
	
end


function on_message(self, message_id, message, sender)
	local levels = gui.get_node("levels")
	local cross = gui.get_node("cross")
	local next = gui.get_node("next")
	local share = gui.get_node("share")
	local chapter = gui.get_node("chapter")
	local hand = gui.get_node("hand")
	local upToDate = gui.get_node("upToDate")
	local noNet = gui.get_node("noNet")
	local netRetry = gui.get_node("netRetry")
	local instructions = gui.get_node("instructions")
	if message_id == levelOver then
		gui.set_text(chapter, "Level " .. message.level .. " complete!")	
		gui.set_enabled(cross, false)
		gui.set_enabled(chapter, true)
		gui.set_enabled(next, true)
		gui.set_enabled(share, true)	
	end
	if message_id == writeLevel then
		gui.set_text(levels,"#"..message.current)
		if message.current == 1 then
			gui.set_enabled(hand, true)
			gui.set_enabled(instructions, true)
			local color = gui.get_color(hand)
			color.w = 0
			gui.animate(hand, gui.PROP_COLOR, color, gui.EASING_LINEAR, 2.5,0,nil,gui.PLAYBACK_LOOP_PINGPONG)
		end
	end
	if message_id == handOff then
		gui.set_enabled(hand, false)
	end
	if message_id == noConnection then
		gui.set_enabled(cross, false)
		gui.set_enabled(noNet, true)
		gui.set_enabled(netRetry, true)	
	end
	if message_id == yesConnection then
		gui.set_enabled(cross, true)
		gui.set_enabled(noNet, false)
		gui.set_enabled(netRetry, false)

	end
	
end

function on_input(self, action_id, action)
	local sound = gui.get_node("sound")
	local clue = gui.get_node("clue")
	local clueNo = gui.get_node("clueNo")
	local clueNo = gui.get_node("clueNo")
	local circle = gui.get_node("circle")
	local up = gui.get_node("up")
	local down = gui.get_node("down")
	local right = gui.get_node("right")
	local left = gui.get_node("left")
	local netRetry = gui.get_node("netRetry")
	local next = gui.get_node("next")
	local share = gui.get_node("share")
	local cross = gui.get_node("cross")

	if action_id == input_leftClick and action.pressed then
		if gui.pick_node(sound, action.x, action.y) then
			if gui.get_flipbook(sound) == soundOnAnim then
				msg.post("controller#controllerScript","soundOff") 
				gui.play_flipbook(sound, soundOffAnim)
			else
				msg.post("controller#controllerScript","soundOn") 
				gui.play_flipbook(sound, soundOnAnim)
			end
		end
		
		if gui.pick_node(clue, action.x, action.y) then
			local xBulb=1015
			local yBulb=1750
			local xAd=985
			local yAd=1740
			if gui.get_flipbook(clue) == bulbAnim then
				msg.post("controller#controllerScript","showClue") 
				clues=clues-1
				if clues<1 then
					gui.set_enabled(clueNo, false)
					gui.play_flipbook(clue, adVideoAnim)
					gui.set_position(clue, vmath.vector3(xAd,yAd,0))
				else
					gui.set_text(clueNo, clues)					
				end
			else
				gui.play_flipbook(clue, bulbAnim)
				gui.set_position(clue, vmath.vector3(xBulb,yBulb,0))
				gui.set_enabled(clueNo, true)
				gui.set_text(clueNo, 3)
				clues=3
			end
		end

		if gui.pick_node(up, action.x, action.y) and gui.is_enabled(cross)  then
			msg.post("controller#controllerScript","up")
		end

		if gui.pick_node(down, action.x, action.y) and gui.is_enabled(cross) then
			msg.post("controller#controllerScript","down")
		end

		if gui.pick_node(right, action.x, action.y) and gui.is_enabled(cross) then
			msg.post("controller#controllerScript","right")
		end

		if gui.pick_node(left, action.x, action.y) and gui.is_enabled(cross) then
			msg.post("controller#controllerScript","left")
		end
		
		if gui.pick_node(circle, action.x, action.y) and gui.is_enabled(cross) then
			msg.post("controller#controllerScript","flipr")
		end
		if gui.pick_node(netRetry, action.x, action.y) and gui.is_enabled(netRetry) then
			msg.post("controller#controllerScript","retry")
			msg.post("controller#controllerScript","buttonSound")
		end
		if gui.pick_node(share, action.x, action.y) and gui.is_enabled(share) then
			msg.post("controller#controllerScript","buttonSound")
		end
		if gui.pick_node(next, action.x, action.y) and gui.is_enabled(next) then
			msg.post("controller#controllerScript","buttonSound")
		end

		
	end
end

